{"mappings":"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","sources":["index.js"],"sourcesContent":["var Scene = /** @class */ (function () {\n    function Scene() {\n        this.vertexShader = \"#version 300 es\\n\\n  in vec4 a_Position;\\n  in float a_PointSize;\\n\\n  uniform vec4 u_Translation;\\n  uniform float u_CosB;\\n  uniform float u_SinB;\\n  uniform mat4 u_xformMatrix;\\n\\n  void main() {\\ngl_Position = u_xformMatrix * a_Position;\\n  }\\n  \";\n        this.fragmentShader = \"#version 300 es\\n  precision highp float;\\n  out vec4 outColor;\\n  void main() {\\n    outColor = vec4(1.0, 0.0, 0.5, 1);\\n  }\\n  \";\n        this.canvasElement = document.querySelector('#webgl-canvas');\n        this.gl = this.canvasElement.getContext('webgl2');\n        var n = this.initializeVertexBuffer();\n        var hasInitializedShader = this.initializeShader();\n        if (!hasInitializedShader) {\n            console.log('Failed to create program');\n            return;\n        }\n        var displayWidth = this.canvasElement.clientWidth;\n        var displayHeight = this.canvasElement.clientHeight;\n        this.canvasElement.width = displayWidth;\n        this.canvasElement.height = displayHeight;\n        this.gl.viewport(0, 0, this.gl.canvas.width, this.gl.canvas.height);\n        // Set the color\n        this.gl.clearColor(0.0, 1.0, 1.0, 1.0);\n        // Clear canvas\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        // Draw point\n        this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, n);\n    }\n    Scene.prototype.initializeShader = function () {\n        // Create program\n        var program = this.createWebGLProgram();\n        if (!program) {\n            console.log('Failed to create program');\n            return false;\n        }\n        // Use program\n        this.gl.useProgram(program);\n        // Get attribute location\n        this.a_Position = this.gl.getAttribLocation(program, 'a_Position');\n        // Get uniform location\n        // const u_Translation = this.gl.getUniformLocation(program, 'u_Translation');\n        // Declare new position\n        var position = new Float32Array([0.0, 0.0, 0.0, 1.0]);\n        // Declare translation\n        var translation = new Float32Array([0.5, 0.5, 0.0, 0.0]);\n        var angle = 4;\n        var radian = (Math.PI * angle) / 180;\n        var cosB = Math.cos(radian);\n        var sinB = Math.sin(radian);\n        // Matrix in column major order\n        var xFormMatrix = new Float32Array([\n            cosB,\n            sinB,\n            0.0,\n            0.0,\n            -sinB,\n            cosB,\n            0.0,\n            0.0,\n            0.0,\n            0.0,\n            1.0,\n            0.0,\n            0.1,\n            0.3,\n            0.0,\n            1.0\n        ]);\n        /*\n         * Rotation matrix\n         * [cosB, sinB, 0.0, 0.0,\n         *  -sinB, cosB, 0.0, 0.0,\n         *  0.0, 0.0, 1.0, 0.0,\n         *  0.0, 0.0, 0.0,1.0]\n         */\n        /*\n         * Translation matrix\n         * [1.0, 0.0, 0.0, 0.0,\n         *  0.0, 1.0, 0.0, 0.0,\n         *  0.0, 0.0, 1.0, 0.0,\n         *  0.1, 0.3, 0.0,1.0]\n         */\n        /*\n         * Scaled matrix\n         * [Sx, 0.0, 0.0, 0.0,\n         *  0.0, Sy, 0.0, 0.0,\n         *  0.0, 0.0, Sz, 0.0,\n         *  0.1, 0.3, 0.0,1.0]\n         */\n        var u_xformMatrix = this.gl.getUniformLocation(program, 'u_xformMatrix');\n        this.gl.uniformMatrix4fv(u_xformMatrix, false, xFormMatrix);\n        // Set new position\n        this.gl.vertexAttrib4fv(this.a_Position, position);\n        // this.gl.uniform4fv(u_Translation, translation);\n        return true;\n    };\n    Scene.prototype.createWebGLProgram = function () {\n        // Load shaders\n        var vertexShader = this.getShader(this.gl.VERTEX_SHADER, this.vertexShader);\n        var fragmentShader = this.getShader(this.gl.FRAGMENT_SHADER, this.fragmentShader);\n        if (!vertexShader || !fragmentShader) {\n            return null;\n        }\n        // Create program object\n        var program = this.gl.createProgram();\n        // Attach shader object\n        this.gl.attachShader(program, vertexShader);\n        this.gl.attachShader(program, fragmentShader);\n        // Link the program object to WebGLRenderingContext\n        this.gl.linkProgram(program);\n        // Get the result\n        var linked = this.gl.getProgramParameter(program, this.gl.LINK_STATUS);\n        if (!linked) {\n            var error = this.gl.getProgramInfoLog(program);\n            console.log(\"Failed to link program \".concat(error));\n            // Clean up\n            this.gl.deleteProgram(program);\n            this.gl.deleteShader(vertexShader);\n            this.gl.deleteShader(fragmentShader);\n            return null;\n        }\n        return program;\n    };\n    Scene.prototype.getShader = function (type, source) {\n        // Create shader object\n        var shader = this.gl.createShader(type);\n        if (!shader) {\n            console.log('Could not create the shader');\n            return null;\n        }\n        // Set the shader source\n        this.gl.shaderSource(shader, source);\n        // Compile the shader\n        this.gl.compileShader(shader);\n        // Check the result of the compilation\n        var compiled = this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS);\n        if (!compiled) {\n            var error = this.gl.getShaderInfoLog(shader);\n            console.log(\"Failed to compile shader \".concat(error));\n            // Clean up\n            this.gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    };\n    Scene.prototype.initializeVertexBuffer = function () {\n        var vertices = new Float32Array([-0.5, 0.5, -0.5, -0.5, 0.5, 0.5]); //Store vertices in buffer array\n        var n = 3; //Number of vertices\n        // Create vertex buffer\n        var vertexBuffer = this.gl.createBuffer();\n        if (!vertexBuffer) {\n            console.log('Failed to create the vertex buffer');\n            return -1;\n        }\n        // Bind the buffer object to a target\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, vertexBuffer);\n        // Write data into buffer object\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, vertices, this.gl.STATIC_DRAW);\n        // Assign buffer object to attribute value\n        this.gl.vertexAttribPointer(this.a_Position, 2, this.gl.FLOAT, false, 0, 0);\n        this.gl.enableVertexAttribArray(this.a_Position);\n        return n;\n    };\n    return Scene;\n}());\nnew Scene();\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}